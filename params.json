{"name":"Karkat","tagline":"Multithreaded python IRC socket bot.","body":"# Karkat\r\n\r\nMultithreaded python IRC socket bot.\r\nWarning: This readme may be out of date. Karkat is undergoing thorough modifications to his plugin structure. The majority of former features are currently not ported to the new interface- this is reasonably easy to do, but I have not done so as I am cleaning them all up before re-adding them. Please be patient, and feel free to do it yourself.\r\n\r\n## Getting Started\r\n### Step 1: Download dependencies\r\nIf not already installed, the following packages must be installed:\r\n- Docopt\r\n- Requests\r\n- PyYaml\r\n- PyLast\r\n \r\nRun ``sudo pip3 install docopt pyyaml requests pylast`` to install them.\r\n\r\n### Step 2: Create server config\r\nCreate a config file. A sample file (Sample.yaml) is provided. For convenience, a config generator mkconf.py is provided.\r\n\r\n### Step 3: Make api keys (optional)\r\nSome modules require api keys. Create a file apikeys.conf in the config directory. Put your keys in there in the format specified by the module.\r\nFor the keys currently required to get karkat to run, the format is:\r\n```\r\nbit.ly:\r\n    user: USERNAME\r\n    key: APIKEY\r\nyoutube:\r\n    channel: CHANNEL-STRING\r\n    appid: APPID\r\n    secret: SECRET\r\nwolfram:\r\n    key: API_KEY\r\nlast.fm:\r\n    key: API_KEY\r\n    secret: API_SECRET\r\n```\r\n\r\n### Step 4: Run karkat\r\nKarkat is run via ``./karkat.py <config>``. Other options are available, see the full argspec via ./karkat.py -h.\r\n\r\n## Files\r\n\r\n### karkat.py\r\n\r\nThis file loads all the plugins and spawns the server object. You may put code to replace the plugin system here (if, e.g you want to run a different bot's plugins on it).\r\n\r\nThe information below this point is outdated.\r\n\r\n### threads.py \r\n\r\nThis file contains the threads Karkat uses to operate. For every connection:\r\n- There is 1 Printer thread and 1 Connection thread. Currently, the connection thread doesn't actually exist and is just stuck at the bottom of ``karkat.py``\r\n- There is a dynamic-sized array of Caller threads, as dictated by the ``GP_CALLERS`` constant defined in ``karkat.py``\r\n\r\n### irc.py\r\nThis file contains some helper functions to parse IRC messages. The callback class provides some decorators which affect the behaviour of how a callback is handled by the connection thread.\r\n\r\n### text.py\r\nThis file contains some general text manipulation utilities. The design aesthetic of Karkat encourages short, multi-line output over information-dense, word-wrapped output.\r\n\r\n### features.py\r\nAll of the like, features are here. Currently they're just ``execfile()``'d after everything else is defined, so uh, be careful with that.\r\n\r\nIt also only is run if the -f flag is passed in for some reason.\r\n\r\n## Defining a callback\r\nThe basic callback takes the arguments ``(words, line)`` where words is the line split by spaces, and line is the raw line from the server. Put the function in the corresponding entry in flist (where the keys are ``.lower()``'d ``word[1]``s).\r\n\r\n### Decorators\r\n- ``@Callback.threadsafe`` \r\nmarks a function as threadsafe, which allows it to utilise the extra callables.\r\n- ``@Callback.background``\r\nmarks a function as a background function (i.e low priority) which sticks it in an alternate caller.\r\n- ``@Callback.msghandler``\r\nchanges the function signature of the callback to ``(Address, context, Message)``\r\n\r\nOnly works for callbacks of the form \":Address TYPE target :message\" \r\n- ``@command(trigger, args=None or regexp, key=str.lower, help=None or str)``\r\nchanges the function signature of the callback to ``(message, [arg1, arg2...])``\r\n\r\nTriggers the function only when the data matches the form ``[!@]trigger regexp``.\r\n\r\n``trigger`` may be a string or a list of triggers. The key kwarg can be used to specify the key for what triggers are considered equivelant.\r\n\r\n``args`` is a regular expression, with each group representing a new argument to give to the function. If None, no argument is matched.\r\n\r\n``help`` is a string sent in place of the function's output if trigger matches, but args do not.\r\n\r\nOnly works for NOTICEs and PRIVMSGs\r\n\r\n## Debugging mode\r\nDebugging mode can be enabled with the ``-d [threshhold]`` option. This sends server input to stdout, as well as provides warnings when the dispatcher loop takes longer than 0.15 or ``threshhold`` seconds to complete.\r\n\r\nKarkat also provides two interpretters, a bash one which may be used by sending ``$ COMMAND`` to the bot, or a python interpretter with access to the global namespace via ``>>> command`` or ``\"\"\"command\"\"\"``. Note: bolded text will be messaged back to the sending context.\r\n\r\n## Features:\r\n- A list of features is available at http://www.tetrap.us/karkat\r\n\r\nKarkat's base system is undergoing renovations. Better documentation will be made available when the callback system is completed.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}